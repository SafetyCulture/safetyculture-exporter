# yamllint disable rule:line-length
---
name: Tests

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  pull_request:
    types: [opened]
  push:

jobs:
  Unit-Tests:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Test & Coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          go test -coverprofile c.out ./...
          ./cc-test-reporter format-coverage -o codeclimate.json --prefix $(go list -m)

      - name: Upload Coverage Result Artifact
        uses: actions/upload-artifact@v2
        with:
          name: codeclimate-unit
          path: codeclimate.json
          retention-days: 1

      - uses: actions/setup-python@v2
      - name: Run pre commit linting
        uses: pre-commit/action@v2.0.0

  PostgreSQL-Integration-Tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: iauditor_exporter_db
          POSTGRES_USER: iauditor_exporter
          POSTGRES_PASSWORD: iauditor_exporter
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Test & Coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          TEST_DB_DIALECT: postgres
          TEST_DB_CONN_STRING: "postgresql://iauditor_exporter:iauditor_exporter@localhost:5432/iauditor_exporter_db"
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          go test -coverprofile c.out ./... -tags=sql
          ./cc-test-reporter format-coverage -o codeclimate.json --prefix $(go list -m)

      - name: Upload Coverage Result Artifact
        uses: actions/upload-artifact@v2
        with:
          name: codeclimate-intg-postgres
          path: codeclimate.json
          retention-days: 1

  MySQL-8-Integration-Tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: iauditor_exporter
          MYSQL_DATABASE: iauditor_exporter_db
          MYSQL_USER: iauditor_exporter
          MYSQL_PASSWORD: iauditor_exporter
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Test & Coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          TEST_DB_DIALECT: mysql
          TEST_DB_CONN_STRING: "root:iauditor_exporter@tcp(localhost:3306)/iauditor_exporter_db?charset=utf8mb4&parseTime=True&loc=Local"
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          go test -coverprofile c.out ./... -tags=sql
          ./cc-test-reporter format-coverage -o codeclimate.json --prefix $(go list -m)

      - name: Upload Coverage Result Artifact
        uses: actions/upload-artifact@v2
        with:
          name: codeclimate-mysql-8
          path: codeclimate.json
          retention-days: 1


  SQL-Server-Integration-Tests:
    runs-on: ubuntu-latest
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server
        env:
          SA_PASSWORD: "iAuditorExporter12345"
          ACCEPT_EULA: "Y"
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P iAuditorExporter12345 -Q \"SELECT 1\" || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 1433:1433

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Test & Coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          TEST_DB_DIALECT: sqlserver
          TEST_DB_CONN_STRING: "sqlserver://sa:iAuditorExporter12345@localhost:1433?database=master"
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          go test -coverprofile c.out ./... -tags=sql
          ./cc-test-reporter format-coverage -o codeclimate.json --prefix $(go list -m)

      - name: Upload Coverage Result Artifact
        uses: actions/upload-artifact@v2
        with:
          name: codeclimate-intg-sql-server
          path: codeclimate.json
          retention-days: 1

  Upload-Coverage:
    runs-on: ubuntu-latest
    needs:
      - Unit-Tests
      - PostgreSQL-Integration-Tests
      - MySQL-8-Integration-Tests
      - SQL-Server-Integration-Tests
    steps:
      - name: Download all coverage results
        uses: actions/download-artifact@v2

      - name: Upload Coverage to Code Climate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter sum-coverage */codeclimate.json -p 4 -o codeclimate.total.json
          ./cc-test-reporter upload-coverage -i codeclimate.total.json
