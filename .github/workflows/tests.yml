# yamllint disable rule:line-length
---
name: Tests

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  pull_request:
    types: [opened]
  push:

jobs:
  Unit-Tests:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.23

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Test
        run: |
          go test ./...

      - uses: actions/setup-python@v2
      - name: Run pre commit linting
        uses: pre-commit/action@v3.0.1

  PostgreSQL-Integration-Tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: safetyculture_exporter_db
          POSTGRES_USER: safetyculture_exporter
          POSTGRES_PASSWORD: safetyculture_exporter
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.22.3

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Test
        env:
          TEST_DB_DIALECT: postgres
          TEST_DB_CONN_STRING: "postgresql://safetyculture_exporter:safetyculture_exporter@localhost:5432/safetyculture_exporter_db"
        run: |
          go test ./... -tags=sql

  MySQL-8-Integration-Tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: safetyculture_exporter
          MYSQL_DATABASE: safetyculture_exporter_db
          MYSQL_USER: safetyculture_exporter
          MYSQL_PASSWORD: safetyculture_exporter
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.22.3

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Test
        env:
          TEST_DB_DIALECT: mysql
          TEST_DB_CONN_STRING: "root:safetyculture_exporter@tcp(localhost:3306)/safetyculture_exporter_db?charset=utf8mb4&parseTime=True&loc=Local"
        run: |
          go test ./... -tags=sql

  SQL-Server-Integration-Tests:
    runs-on: ubuntu-latest
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server
        env:
          SA_PASSWORD: "SafetyCultureExporter12345"
          ACCEPT_EULA: "Y"
        options: >-
          --health-cmd "/opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P SafetyCultureExporter12345 -Q \"SELECT 1\" || exit 1"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 20
        ports:
          - 1433:1433

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.22.3

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Test & Coverage
        env:
          TEST_DB_DIALECT: sqlserver
          TEST_DB_CONN_STRING: "sqlserver://sa:SafetyCultureExporter12345@localhost:1433?database=master"
        run: |
          go test ./... -tags=sql
