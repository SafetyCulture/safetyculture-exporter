# yamllint disable rule:line-length
---
name: package

# yamllint disable-line rule:truthy
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  package:
    strategy:
      matrix:
        build-os: [ubuntu-latest]
        platform: [linux-amd64, windows-amd64, darwin-amd64, darwin-arm64]
    runs-on: ${{ matrix.build-os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.2

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install linux dependencies
        run: sudo apt-get update -y && sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev build-essential pkg-config gcc-mingw-w64 zip

      - name: Build packages windows-amd64
        if: ${{ matrix.platform == 'windows-amd64' }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          echo "building for ${{ matrix.platform }}"
          GOOS=windows GOARCH=amd64 go build -v -ldflags "-s -w -X github.com/SafetyCulture/safetyculture-exporter/internal/app/version.version=${{ github.ref_name }}" -o safetyculture-exporter.exe ./cmd/safetyculture-exporter/main.go
          mkdir dist
          cp safetyculture-exporter.exe README.md THIRD_PARTY_NOTICES.md dist/
          zip -r safetyculture-exporter_4.6.0_Windows_x86_64.zip dist
          rm -rf dist

      - name: Upload artifacts windows-amd64
        if: ${{ matrix.platform == 'windows-amd64' }}
        uses: actions/upload-artifact@v2
        with:
          name: exporter-windows-amd64
          path: safetyculture-exporter_4.6.0_Windows_x86_64.zip
      
      
      - name: Build package darwin-amd64
        if: ${{ matrix.platform == 'darwin-amd64' }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          echo "building for ${{ matrix.platform }}"
          GOOS=darwin GOARCH=amd64 go build -v -ldflags "-s -w -X github.com/SafetyCulture/safetyculture-exporter/internal/app/version.version=${{ github.ref_name }}" -o safetyculture-exporter ./cmd/safetyculture-exporter/main.go
          mkdir dist
          cp safetyculture-exporter README.md THIRD_PARTY_NOTICES.md dist/
          zip -r safetyculture-exporter_4.6.0_macOS_x86_64.zip  dist
          rm -rf dist
          
      - name: Upload artifacts darwin-amd64
        if: ${{ matrix.platform == 'darwin-amd64' }}
        uses: actions/upload-artifact@v2
        with:
          name: exporter-darwin-amd64
          path: safetyculture-exporter_4.6.0_macOS_x86_64.zip
    
      
      - name: Build package darwin-arm64
        if: ${{ matrix.platform == 'darwin-arm64' }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          echo "building for ${{ matrix.platform }}"
          GOOS=darwin GOARCH=arm64 go build -v -ldflags "-s -w -X github.com/SafetyCulture/safetyculture-exporter/internal/app/version.version=${{ github.ref_name }}" -o safetyculture-exporter ./cmd/safetyculture-exporter/main.go
          mkdir dist
          cp safetyculture-exporter README.md THIRD_PARTY_NOTICES.md dist/
          zip -r safetyculture-exporter_4.6.0_macOS_ARM.zip  dist
          rm -rf dist

      - name: Upload artifacts darwin-arm64
        if: ${{ matrix.platform == 'darwin-arm64' }}
        uses: actions/upload-artifact@v2
        with:
          name: exporter-darwin-arm64
          path: safetyculture-exporter_4.6.0_macOS_ARM.zip
      
      
      - name: Build package linux-amd64
        if: ${{ matrix.platform == 'linux-amd64' }}
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          echo "building for ${{ matrix.platform }}"
          GOOS=linux GOARCH=amd64 go build -v -ldflags "-s -w -X github.com/SafetyCulture/safetyculture-exporter/internal/app/version.version=${{ github.ref_name }}" -o safetyculture-exporter ./cmd/safetyculture-exporter/main.go
          zip safetyculture-exporter_linux_x86_64.zip exporter-linux README.md THIRD_PARTY_NOTICES.md
          mkdir dist
          cp safetyculture-exporter README.md THIRD_PARTY_NOTICES.md dist/
          zip -r safetyculture-exporter_4.6.0_Linux_x86_64.zip dist
          rm -rf dist          
          
      - name: Upload artifacts linux-amd64
        if: ${{ matrix.platform == 'linux-amd64' }}
        uses: actions/upload-artifact@v2
        with:
          name: exporter-linux-amd64
          path: safetyculture-exporter_4.6.0_Linux_x86_64.zip
  
  
  release:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Download package windows amd64
        uses: actions/download-artifact@v2
        with:
          name: exporter-windows-amd64
          
      - name: Download package darwin amd64
        uses: actions/download-artifact@v2
        with:
          name: exporter-darwin-amd64
          
      - name: Download package darwin arm64
        uses: actions/download-artifact@v2
        with:
          name: exporter-darwin-arm64
          
      - name: Download package linux amd64
        uses: actions/download-artifact@v2
        with:
          name: exporter-linux-amd64

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          artifacts: "safetyculture-exporter_4.6.0_Windows_x86_64.zip,safetyculture-exporter_4.6.0_macOS_x86_64.zip,safetyculture-exporter_4.6.0_macOS_ARM.zip,safetyculture-exporter_4.6.0_Linux_x86_64.zip"
          allowUpdates: true
          prerelease: true
          draft: true
          makeLatest: false
