// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	api "github.com/SafetyCulture/iauditor-exporter/internal/app/api"

	feed "github.com/SafetyCulture/iauditor-exporter/internal/app/feed"

	mock "github.com/stretchr/testify/mock"
)

// Feed is an autogenerated mock type for the Feed type
type Feed struct {
	mock.Mock
}

// Columns provides a mock function with given fields:
func (_m *Feed) Columns() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// CreateSchema provides a mock function with given fields: exporter
func (_m *Feed) CreateSchema(exporter feed.Exporter) error {
	ret := _m.Called(exporter)

	var r0 error
	if rf, ok := ret.Get(0).(func(feed.Exporter) error); ok {
		r0 = rf(exporter)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Export provides a mock function with given fields: ctx, apiClient, exporter, orgID
func (_m *Feed) Export(ctx context.Context, apiClient *api.Client, exporter feed.Exporter, orgID string) error {
	ret := _m.Called(ctx, apiClient, exporter, orgID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *api.Client, feed.Exporter, string) error); ok {
		r0 = rf(ctx, apiClient, exporter, orgID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Model provides a mock function with given fields:
func (_m *Feed) Model() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *Feed) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Order provides a mock function with given fields:
func (_m *Feed) Order() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// PrimaryKey provides a mock function with given fields:
func (_m *Feed) PrimaryKey() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// RowsModel provides a mock function with given fields:
func (_m *Feed) RowsModel() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}
